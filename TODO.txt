Pre 1.0 release:

Finish BP and move to cc.factorie package.  Make it fast!
Consider moving generative.GibbsSampler up to cc.factorie?
Consider making cc.factorie.optimize take DoubleSeq instead of Array[Double]
Consider changes to generative.Collapse infrastructure
Implement generative.CollapsedVariationalBayes and make sure it works for LDA
Re-consider type arguments in Sampler and descendants
Get AROW Perceptron training working, and look at SampleRank interaction
Make a Family.score(Tensor) method for use in higher efficiency situations (e.g. BP)
Look at app.nlp.relation
Make reasonable command-line tools for MALLET functionality, and document
Get rid of dependency on Java bibtex parser library
Sanity-check pass through all code
Package documentation
Sebastian: Make new kinds of Templates; current one: factors(Variable neighbor); new: factors(arbitrary context)
 Consider naming the current Template something more specific, e.g. "NeighborTemplate"
 Template[C] { def factors(context:C): Iterable[Factors] }
 NeighborTemplate extends Template[Variable] { def unroll1(v:Variable): Iterable[Factors] }


More examples:
Implement TopicsOverTime (needs Beta distribution)
Finish/fix DecisionTree implementation, and make example
Make an HMM example and show that BP inference and EM training work on it


DONE:
Consider making no variable inherit from Iterable.  (Seq would come from value instead.)  Remove SeqEqualsEq and friends.
 Consider making any current Variable that *could* have more than one different value type be not a Variable.  
 Then allow Model.factors and Infer and Maximize to have apply(Iterable[Variable]) and Apply(Variable).
 Then, e.g. change "for (token <- document)" to "for (token <- document.tokens)". [done]
Re-consider if variable.value should always make an immutable copy.  [no]
Look at Gaussian.logpr, Beta.logpr, etc, and ensure these scores are correct.  [yes]
Get rid of Seq[Double] everywhere, including cc.factorie.maths.  Get rid of IndexedSeqOps completely.
Get rid of la.Vector and use la.Tensor instead.  Make corresponding changes in Factors/Templates, etc.
Make VectorFamily require "def statisticsDomain"




Low Priority Coding:
Replace cc.factorie.er with something better that uses Scala 2.10 macros.
-Implement Forany2 in er
-Fix IntTerm in er
-Support inference over relations in er
Create simple infrastructure for non-relational generative Bayes nets

Testing:
Create more unit tests!
Profile everything, especially BP and LDA.

Documentation:
Clean up all examples
Put in ACE coref example
Put in final spanner example
Write manual in package.html
Document how to get a FACTORIE interpreter prompt

